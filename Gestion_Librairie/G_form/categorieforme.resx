<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>